git status 

git init creates a .git  folder and hidden by default master branch



Local Repo

1)Local Area  (folder and tracking is not yet started / called untracked or unstaged file)
2) staging Area(git add .)
3) Repo Area(git commit -m "first commit")



before these we need to 

git config --global user.name "SivaKumar.OS"
git config --global user.email "...@gmail.com"




git config --list (to know weather our user name and password is present)






steps :

git status 
git inti 
git add .
git status 
git config 
git config --list 
git commit -m "first commit"




git rm --cached sample.txt (it will make the file to comeback to local file from the staging area)




left to right  -> from local repo to the remote 

right to left -> from the repo to local  



git commit -m "first commit"


git branch -M main



git remote add origin https://github.com/RC-KapilDev/TowerManagementSystem-UserManagement.git




 git push -u origin main



git pull



Fork = creating a copy of remote repo to our own repo

clone = creating copy of remote to local repo 



recap:

(left to right)

1) create a local folder

2) and init empty git local repo / git init 

3) added an empty file Sample.txt   

4) added it for tracking (moved to staging area)/ git add .

5) removed from the staging area / git rm --cached <filename>

6) again added to staging area / git add <ile_name> .


7)then committed the changed added two global config  / git commit -m "Commit Message" 
each commit creates a unique id with timestamp 

8)added remote URL repo / git remote add origin <remote_repo_url>

9)created a local Brach namely main from the master branch / git branch -M <branch_name>










(for Right to left )
 

1)create a remote repo in git/GitLab/bitbucker

2)git clone <git_url> 

3) added an empty file Sample.txt   

4) added it for tracking (moved to staging area)/ git add .

5) removed from the staging area / git rm --cached <filename>

6) again added to staging area / git add <ile_name> .


7) then committed the changed added two global config  / git commit -m "Commit Message" 
each commit creates a unique id with timestamp 

8)added remote URL repo / git remote add origin <remote_repo_url>

9) created a local Brach namely main from the master branch / git branch -M <branch_name>
